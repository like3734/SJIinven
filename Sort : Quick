package baekjoon;

import java.util.*;
import java.io.*;
import java.math.*;
import java.lang.Math;


public class Main{
    static int n;
    static int [] itemList;
// Main
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        itemList = new int [n];
        
        for(int i=0; i<n; i++) {
        	itemList[i] = sc.nextInt();
        }
        
        quick(itemList, 0, itemList.length-1);
        for(int i=0; i<n; i++) {
        	System.out.println(itemList[i]);
        }
        
    }
    
    public static void quick(int[] A, int begin, int end) {
    	if(begin<end) {
    		int q = partition(A, begin, end);
    		quick(A, begin, q-1);
    		quick(A, q+1, end);
    	}
    }
    
    public static int partition(int[] A, int begin, int end){
        int left = begin;
        int right = end;
        int pivot = A[(left+right)/2];
        
        while( left < right ){
            while( (A[left] < pivot) && (left < right) ) left++;
            while( (A[right] > pivot) && (left < right)) right--;
            
            if( left < right ){
                int temp = A[left];
                A[left] = A[right];
                A[right] = temp;
            }
        }
        
        return left;
    }
    
    
}
